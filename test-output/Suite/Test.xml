<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Kirans-MacBook-Air.local" name="Test" tests="20" failures="4" timestamp="19 Jul 2016 13:14:53 GMT" time="37.276" errors="0">
  <testcase name="GetQueuedOrdersTest" time="1.618" classname="apiTests.GetQueuedOrders">
    <failure type="junit.framework.AssertionFailedError" message="
Expected: null
  Actual: GetQueuedOrdersResponse&amp;lt;message=&amp;quot;orders Task Added to Queue &amp;quot;, success=true&amp;gt;

--- Found following differences ---
expected: null, actual: GetQueuedOrdersResponse&amp;lt;message=&amp;quot;orders Task Added to Queue &amp;quot;, success=true&amp;gt;
">
      <![CDATA[junit.framework.AssertionFailedError: 
Expected: null
  Actual: GetQueuedOrdersResponse<message="orders Task Added to Queue ", success=true>

--- Found following differences ---
expected: null, actual: GetQueuedOrdersResponse<message="orders Task Added to Queue ", success=true>

	at junit.framework.Assert.fail(Assert.java:50)
	at apiTests.GetQueuedOrders.GetQueuedOrdersTest(GetQueuedOrders.java:50)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- GetQueuedOrdersTest -->
  <testcase name="CrmAssignmentTest" time="3.828" classname="apiTests.PostCrmAssignment"/>
  <testcase name="FeAssignmentTest" time="4.147" classname="apiTests.PostFeAssignment"/>
  <testcase name="GetForceUpdateConfig" time="0.323" classname="apiTests.GetShoppersById"/>
  <testcase name="OrderRescheduleTest" time="0.283" classname="apiTests.PostRescheduleOrder"/>
  <testcase name="GetShoppersByIdTest" time="0.386" classname="apiTests.GetForceUpdateConfig"/>
  <testcase name="InsertMarketPlaceOrderTest" time="0.916" classname="apiTests.PostInsertMarketPlaceOrder"/>
  <testcase name="AddMerchantShopperMapping" time="0.406" classname="apiTests.PostAddMerchantShopperMappingTest">
    <failure type="junit.framework.AssertionFailedError" message="
Expected: null
  Actual: PostShopperMerchantResponse&amp;lt;message=&amp;quot;mapping for this merchant and shopper already exists!&amp;quot;, success=false&amp;gt;

--- Found following differences ---
 expected: null
   actual: PostShopperMerchantResponse&amp;lt;message=&amp;quot;mapping for this merchant and shopper already exists!&amp;quot;, success=false&amp;gt;

">
      <![CDATA[junit.framework.AssertionFailedError: 
Expected: null
  Actual: PostShopperMerchantResponse<message="mapping for this merchant and shopper already exists!", success=false>

--- Found following differences ---
 expected: null
   actual: PostShopperMerchantResponse<message="mapping for this merchant and shopper already exists!", success=false>


	at junit.framework.Assert.fail(Assert.java:50)
	at apiTests.PostAddMerchantShopperMappingTest.AddMerchantShopperMapping(PostAddMerchantShopperMappingTest.java:53)
... Removed 26 stack frames]]>
    </failure>
  </testcase> <!-- AddMerchantShopperMapping -->
  <testcase name="GetMerchantsDetailTest" time="0.811" classname="apiTests.GetMerchantsDetail"/>
  <testcase name="CancelOrderTest" time="2.863" classname="apiTests.PostCancelOrder"/>
  <testcase name="InsertOrderTest" time="1.879" classname="apiTests.PostInsert90MinOrder"/>
  <testcase name="InsertChildOrderTest" time="1.384" classname="apiTests.PostInsertChildOrder"/>
  <testcase name="CancelOrderTest" time="2.483" classname="apiTests.PostOrderEnroute"/>
  <testcase name="ResetMerchantThresholdTest" time="10.053" classname="apiTests.PostResetMerchantThreshold">
    <failure type="java.net.ConnectException" message="Failed to connect to test-grofers-hp.appspot.com/2404:6800:4007:800:0:0:0:2011:80">
      <![CDATA[java.net.ConnectException: Failed to connect to test-grofers-hp.appspot.com/2404:6800:4007:800:0:0:0:2011:80
	at okhttp3.internal.io.RealConnection.connectSocket(RealConnection.java:142)
	at okhttp3.internal.io.RealConnection.connect(RealConnection.java:111)
	at okhttp3.internal.http.StreamAllocation.findConnection(StreamAllocation.java:188)
	at okhttp3.internal.http.StreamAllocation.findHealthyConnection(StreamAllocation.java:127)
	at okhttp3.internal.http.StreamAllocation.newStream(StreamAllocation.java:97)
	at okhttp3.internal.http.HttpEngine.connect(HttpEngine.java:289)
	at okhttp3.internal.http.HttpEngine.sendRequest(HttpEngine.java:241)
	at okhttp3.RealCall.getResponse(RealCall.java:240)
	at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:198)
	at retrofit.ServiceGenerator$1.intercept(ServiceGenerator.java:26)
	at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:187)
	at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:160)
	at okhttp3.RealCall.execute(RealCall.java:57)
	at retrofit2.OkHttpCall.execute(OkHttpCall.java:174)
	at apiTests.PostResetMerchantThreshold.ResetMerchantThresholdTest(PostResetMerchantThreshold.java:28)
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- ResetMerchantThresholdTest -->
  <testcase name="GetShopperBuCityIdTest" time="1.263" classname="apiTests.GetShopperBuCityId"/>
  <testcase name="GetShopperByMerchantIdTest" time="0.907" classname="apiTests.GetShopperByMerchantId"/>
  <testcase name="UpdateMerchantThresholdTest" time="1.421" classname="apiTests.PostUpdateMerchantThreshold"/>
  <testcase name="UpdateMerchantTypeTest" time="1.325" classname="apiTests.PostUpdateMerchantType"/>
  <testcase name="CancelOrderTest" time="0.02" classname="apiTests.PostMerchantBackupMapping">
    <failure type="com.google.gson.JsonSyntaxException" message="java.lang.NumberFormatException: Expected an int but was 4934026896867328 at line 34 column 29 path $.response.data[0].id">
      <![CDATA[com.google.gson.JsonSyntaxException: java.lang.NumberFormatException: Expected an int but was 4934026896867328 at line 34 column 29 path $.response.data[0].id
	at com.google.gson.internal.bind.TypeAdapters$7.read(TypeAdapters.java:249)
	at com.google.gson.internal.bind.TypeAdapters$7.read(TypeAdapters.java:239)
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:116)
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:216)
	at com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper.read(TypeAdapterRuntimeTypeWrapper.java:40)
	at com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.read(CollectionTypeAdapterFactory.java:82)
	at com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter.read(CollectionTypeAdapterFactory.java:61)
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:116)
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:216)
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:116)
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:216)
	at com.google.gson.Gson.fromJson(Gson.java:879)
	at utility.FixtureUtils.getAsObject(FixtureUtils.java:36)
	at apiTests.PostMerchantBackupMapping.CancelOrderTest(PostMerchantBackupMapping.java:30)
Caused by: java.lang.NumberFormatException: Expected an int but was 4934026896867328 at line 34 column 29 path $.response.data[0].id
	at com.google.gson.stream.JsonReader.nextInt(JsonReader.java:1172)
	at com.google.gson.internal.bind.TypeAdapters$7.read(TypeAdapters.java:247)
	... 37 more
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- CancelOrderTest -->
  <testcase name="AddMerchantTest" time="0.73" classname="apiTests.PostAddMerchant"/>
</testsuite> <!-- Test -->
